"""
üì∏ ENIGMA-APEX SCREENSHOT & VIDEO CAPTURE GUIDE
For Michael Canfield's Client Presentation
"""

import pyautogui
import time
from datetime import datetime
import os

class ScreenCapture:
    def __init__(self):
        self.screenshot_dir = "client_screenshots"
        self.create_screenshot_dir()
        
    def create_screenshot_dir(self):
        """Create directory for screenshots"""
        if not os.path.exists(self.screenshot_dir):
            os.makedirs(self.screenshot_dir)
            print(f"üìÅ Created screenshot directory: {self.screenshot_dir}")
    
    def capture_dashboard_screenshots(self):
        """Capture screenshots of the dashboard for client presentation"""
        
        print("üì∏ CAPTURING CLIENT PRESENTATION SCREENSHOTS")
        print("=" * 50)
        
        # Wait for user to position browser
        input("üåê Please open http://localhost:3000 in your browser and press ENTER...")
        
        screenshots = [
            ("main_dashboard", "Main Enigma-Apex Dashboard"),
            ("tradingview_chart", "TradingView Live Chart"),
            ("ai_agent_panel", "ChatGPT Agent Status"),
            ("signal_generation", "Real-time Signal Generation"),
            ("performance_metrics", "Performance Metrics")
        ]
        
        for filename, description in screenshots:
            print(f"üì∑ Capturing: {description}")
            print(f"   Position your screen to show {description.lower()}")
            input("   Press ENTER when ready...")
            
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            screenshot_path = f"{self.screenshot_dir}/{filename}_{timestamp}.png"
            
            # Capture screenshot
            screenshot = pyautogui.screenshot()
            screenshot.save(screenshot_path)
            
            print(f"   ‚úÖ Saved: {screenshot_path}")
            time.sleep(1)
        
        print("\nüéâ All screenshots captured successfully!")
        print(f"üìÅ Location: {os.path.abspath(self.screenshot_dir)}")

def create_video_recording_guide():
    """Create a guide for video recording"""
    
    guide = """
üé¨ VIDEO RECORDING GUIDE FOR MICHAEL CANFIELD
==============================================

RECOMMENDED TOOLS:
- OBS Studio (Free): https://obsproject.com/
- Loom (Browser-based): https://loom.com/
- Windows Game Bar: Win+G

VIDEO STRUCTURE (5-7 minutes):
===============================

1. INTRODUCTION (30 seconds)
   - "Enigma-Apex Trading Platform - Michael Canfield's ChatGPT Agent"
   - "Production-ready system with real-time analysis"

2. MAIN DASHBOARD (2 minutes)
   - Open http://localhost:3000
   - Show TradingView chart with live E-mini S&P 500 data
   - Highlight status indicators (AI Agent, OCR, Kelly, Apex)
   - Demonstrate real-time price updates

3. AI AGENT DEMONSTRATION (2 minutes)
   - Click "Generate Enigma Signal" button
   - Show signal analysis in real-time
   - Explain first principles reasoning
   - Highlight Kelly Criterion position sizing

4. PERFORMANCE METRICS (1 minute)
   - Show win rate, profit factor, P&L
   - Demonstrate Apex compliance monitoring
   - Real-time performance tracking

5. SYSTEM INTEGRATION (1 minute)
   - Show signal flow from generation to display
   - Highlight OCR-ready framework
   - NinjaTrader integration status

6. CONCLUSION (30 seconds)
   - "Production-ready for immediate deployment"
   - "99% completion - ready for market launch"

RECORDING SETTINGS:
===================
- Resolution: 1920x1080 (Full HD)
- Frame Rate: 30 FPS
- Audio: Include microphone narration
- Format: MP4 (H.264)

NARRATION SCRIPT POINTS:
========================
‚úì "This is the Enigma-Apex platform implementing Michael's complete ChatGPT agent vision"
‚úì "Real-time TradingView charts with live market data"
‚úì "First principles AI analysis for profit extension and loss minimization"
‚úì "Kelly Criterion optimization for mathematical position sizing"
‚úì "Apex prop firm compliance built into every decision"
‚úì "Production-ready system processing signals in real-time"
‚úì "Complete OCR framework ready for AlgoBox integration"
‚úì "Training wheels system for newbies and experienced traders"

POST-RECORDING:
===============
1. Review video for clarity and completeness
2. Add title screen: "Enigma-Apex Trading Platform - Live Demo"
3. Export in high quality (1080p minimum)
4. Test playback before sending to client
"""
    
    with open("VIDEO_RECORDING_GUIDE.md", "w") as f:
        f.write(guide)
    
    print("üìã Video recording guide created: VIDEO_RECORDING_GUIDE.md")

if __name__ == "__main__":
    print("üé¨ ENIGMA-APEX CLIENT PRESENTATION CAPTURE")
    print("=" * 50)
    
    # Create video guide
    create_video_recording_guide()
    
    # Option to capture screenshots
    choice = input("\nüì∏ Would you like to capture screenshots now? (y/n): ")
    if choice.lower() == 'y':
        capture = ScreenCapture()
        capture.capture_dashboard_screenshots()
    
    print("\n‚úÖ Ready for client presentation capture!")
    print("üìã Next steps:")
    print("   1. Run demo_launcher.py to start all services")
    print("   2. Use VIDEO_RECORDING_GUIDE.md for recording")
    print("   3. Capture screenshots using this tool")
    print("   4. Send materials to Michael Canfield")
